@page
@model RegisterModel
@using web_app.Models
@inject SignInManager<CustomUser> SignInManager

@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr/>
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.UserName"></label>
                <input asp-for="Input.UserName" class="form-control"/>
                <span asp-validation-for="Input.UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.FullName"></label>
                <input asp-for="Input.FullName" class="form-control"/>
                <span asp-validation-for="Input.FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control"/>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Address"></label>
                <input asp-for="Input.Address" class="form-control"/>
                <span asp-validation-for="Input.Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Gender"></label>
                <select asp-for="Input.Gender">
                    <option disabled>Choose your gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </select>
                <span asp-validation-for="Input.Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.DateOfBirth"></label>
                <input type="date" asp-for="Input.DateOfBirth" class="form-control"/>
                <span asp-validation-for="Input.DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control"/>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control"/>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
            {
                @Html.CheckBoxFor(c => @Model.IsAdmin)
                <label for="@Html.IdFor(c => Model.IsAdmin)">Create as Admin</label>
            @*@Html.LabelFor(l => @Model.Roles[i].Selected, @Model.Roles[i].Text, new {@class="form-check-label"})
                @*
                <div class="form-check">
                    <input type="checkbox" id="isAdmin" name="Input.IsAdmin" class="form-check-input" asp-for="IsAdmin" />
                    <label for="isAdmin" class="form-check-label">Create as Admin</label>
                </div>*@
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
            }
            else
            {
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
            }
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
